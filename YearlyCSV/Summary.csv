import os
import subprocess
import sys
import shutil

def push_files(raw_path, sum_path, commit_message="Updated CSV Via Script"):
    repo_url = "https://github.com/core2062/ScoutingSpider.git"
    repo_name = "ScoutingSpider"
    repo_path = os.path.join(os.getcwd(), repo_name)
    
    # If the repository folder already exists, remove it first
    if os.path.exists(repo_path):
        print("Repository already exists, deleting it first...")
        shutil.rmtree(repo_path)
    
    # Clone the repository using git clone
    clone_cmd = ["git", "clone", repo_url]
    print("Cloning repository...")
    subprocess.run(clone_cmd, check=True)
    
    # Change to repository directory
    os.chdir(repo_path)
    subprocess.run(["git", "pull", "origin", "main"], check=True)
    
    # Set default Git identity locally to avoid commit issues
    subprocess.run(["git", "config", "--local", "user.email", "magicflash67@gmail.com"], check=True)
    subprocess.run(["git", "config", "--local", "user.name", "Magicflash67"], check=True)
    
    # Define destination paths for the files
    raw_dest = os.path.join(repo_path, "YearlyCSV", "RawData.csv")
    sum_dest = os.path.join(repo_path, "YearlyCSV", "Summary.csv")
    
    print("Copying files...")
    shutil.copy2(raw_path, raw_dest)
    shutil.copy2(sum_path, sum_dest)
    
    # Stage, commit, and push changes
    subprocess.run(["git", "add", "YearlyCSV/RawData.csv", "YearlyCSV/Summary.csv"], check=True)
    subprocess.run(["git", "commit", "-m", commit_message], check=True)
    subprocess.run(["git", "push", "origin", "main"], check=True)
    
    print("Files pushed successfully!")
    
    # Change back to the parent directory
    os.chdir("..")
    
    # Delete the cloned repository folder
    print("Deleting cloned repository folder...")
    shutil.rmtree(repo_path)
    print("Cleanup done!")

if __name__ == "__main__":
    if len(sys.argv) < 3 or len(sys.argv) > 4:
        print("Usage: python RunToPush.py <raw_path> <sum_path> [commit_message]")
        sys.exit(1)
    
    raw_file = sys.argv[1]
    sum_file = sys.argv[2]
    commit_message = sys.argv[3] if len(sys.argv) == 4 else "Updated CSV Via Script"
    
    push_files(raw_file, sum_file, commit_message)
